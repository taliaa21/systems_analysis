% 2) Linear Program Formulation
% -------------------------
% Variables
% Supply
s = [15 10 60 80];

% Demand
d = [30 10 50 20 40] * 0.95;

% Hardness
h = [250 200 2300 700];

% -------------------------
% min c^T x s.t. Ax ? b 
% vector c = cost
c = [360 420 700 2000 370 425 715 2015 350 430 685 1995 355 435 720 1985 365 415 725 2020]';

% matrix A = constraint matrix
A = [% Supply inequalities
     1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0;
     0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0;
     0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0;
     0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1;
     % Demand equalities
     1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 -1 -1 -1 -1 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1;
     % Hardness inequalities
     h(1) h(2) h(3) h(4) 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 h(1) h(2) h(3) h(4) 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 h(1) h(2) h(3) h(4) 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 h(1) h(2) h(3) h(4) 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 h(1) h(2) h(3) h(4);
     % Pipe flow inequalities
     1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0;
     % Flow inequalities
     -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1];
 
 % vector b = constraint constants
 b = [s(1) s(2) s(3) s(4) d(1) -d(1) d(2) -d(2) d(3) -d(3) d(4) -d(4) d(5) -d(5) 1200*d(1) 1200*d(2) 1200*d(3) 1200*d(4) 1200*d(5) 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]';
 
 % solve for optimum x = water flows to towns
 x_opt = linprog(c, A, b);
 
 % determine cost at optimum x
 c_opt = c' * x_opt;